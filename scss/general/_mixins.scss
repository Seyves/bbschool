@use "sass:math";

//Подключение шрифта
@mixin font($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff2") format("woff2"), url("../fonts/#{$file_name}.woff") format("woff");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}
//Percent
@function percent($px, $from) {
	$result: $px/$from * 100%;
	@return $result;
}
//REM
@function rem($px) {
	$result:	$px/16 + rem;
	@return $result;
}
//EM
@function em($px, $current: 16) {
	$result: $px/$current + em;
	@return $result;
}
//Адаптивное свойство

//Currency
@mixin currency($sym) {
	&::after {
		content: "#{$sym}";
	}
}

// Grids
@mixin gridCards($type: fit, $min: 280px, $max: 1fr, $gap: 30px) {
	display: grid;
	gap: $gap;
	grid-template-columns: repeat(auto-#{$type}, minmax($min, $max));
}

@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {
	@if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
		$widthFrom: $maxWidth;
	}
	// Брейк-поинты в EM
	$widthFromMedia: em($widthFrom);
	$widthToMedia: em($widthTo);

	// Формула плавающего значения
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: ($startSize - $minSize)/($widthFrom - $widthTo);
	$yIntersection: -$widthTo * $slope + $minSize;
	$flyValue: #{rem($yIntersection)} + #{$slope * 100}vw;

	$propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};

	@if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {
		@media (min-width: $widthFromMedia) {
			#{$property}: rem($startSize);
		}
	}
	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		#{$property}: $propertyValue;
	}
	@if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {
		@media (max-width: $widthToMedia) {
			#{$property}: rem($minSize);
		}
	}
}

@mixin adaptiveValueRev($property, $startSize, $minSize, $type){
	$addSize: $startSize - $minSize;
	@if $type==1 {		
		//Изменения происходят, когда контейнер меньше
		#{$property}: $startSize + px;
		@media(max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//Изменения происходят, когда контейнер больше
		#{$property}: $startSize + px;
		@media(min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Изменения происходят всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
